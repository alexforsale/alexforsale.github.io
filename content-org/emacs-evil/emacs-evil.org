#+options: ':nil -:nil ^:{} num:nil toc:nil
#+author: Kristian Alexander P
#+creator: Emacs 29.2 (Org mode 9.6.15 + ox-hugo)
#+hugo_section: posts
#+hugo_base_dir: ../../
#+date: <2024-02-25 Thu>
#+title: Emacs Evil
#+description: The extensible vi layer for Emacs.
#+hugo_tags: emacs configuration evil vim vi
#+hugo_categories: emacs
#+startup: inlineimages
Evil is an extensible vi layer for Emacs. It emulates the main features of Vim, and provides facilities for writing custom extensions.
* Installing
** Add Melpa
#+begin_src emacs-lisp
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
#+end_src
** with use-package
#+begin_src emacs-lisp
  (use-package evil
    :ensure
    :preface
    (customize-set-variable 'evil-want-keybinding nil) ;; if using `evil-collection'
    (customize-set-variable 'evil-want-integration t) ;; if using `evil-collection'
    (customize-set-variable 'evil-undo-system 'undo-redo)
    (customize-set-variable 'evil-want-C-u-scroll t) ;; move universal arg to <leader> u
    (customize-set-variable 'evil-want-C-u-delete t) ;; delete back to indentation in insert state
        (customize-set-variable 'evil-want-C-g-bindings t)
    :config
    (evil-mode 1)
    ;; disable this when using `general.el'
    (evil-set-leader '(normal visual) (kbd "SPC"))
    (evil-set-leader '(normal visual) (kbd "C-c SPC") t))
#+end_src
** without use-package
#+begin_src emacs-lisp
;; Set up package.el to work with MELPA
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
(package-initialize)
(package-refresh-contents)

;; Download Evil
(unless (package-installed-p 'evil)
  (package-install 'evil))

;; Enable Evil
(require 'evil)
(evil-mode 1)
#+end_src
* Configuration
** Leader and Localleader key
This is inherited from /vim/[fn:1], So this isn't really required, but as someone who use both /vim/ and /Emacs/ it certainly easier to memorize.
#+begin_src emacs-lisp
  (evil-set-leader '(normal visual) (kbd "SPC"))
  (evil-set-leader '(normal visual) (kbd "C-c SPC") t)
#+end_src
The first line will set the ~<leader>~ key, while the latter will set the ~<localleader>~.
* additional packages
** evil-collection
Setup keybindings for evil-mode
#+begin_src emacs-lisp
  (use-package evil-collection
    :ensure t
    :after evil
    :init
    (evil-collection-init)
    :custom
    (evil-collection-setup-minibuffer t)
    (evil-collection-calendar-want-org-bindings t))
#+end_src
*** Notes:
- =evil-collection= assumes =evil-want-keybinding= is set to =nil= and =evil-want-integration= is set to =t= before loading =evil= and =evil-collection=. Note some other packages may load evil (e.g. evil-leader) so bear that in mind when determining when to set the variables.
** =abbrev-mode=
Not a mandatory package, but it's built-in into /Emacs/ so it nice to have,
#+begin_src emacs-lisp
  (use-package abbrev
    :ensure nil)
#+end_src
* Footnotes

[fn:1] https://learnvimscriptthehardway.stevelosh.com/chapters/06.html
