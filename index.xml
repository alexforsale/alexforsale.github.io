<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>alexforsale.github.io</title>
    <link>https://alexforsale.github.io/</link>
    <description>Recent content on alexforsale.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Jun 2025 22:27:09 +0000</lastBuildDate>
    <atom:link href="https://alexforsale.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Syncthing is Underrated</title>
      <link>https://alexforsale.github.io/posts/syncthing-is-underrated/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/syncthing-is-underrated/</guid>
      <description>Seriously, this is good</description>
    </item>
    <item>
      <title>Why Use MPD in 2025</title>
      <link>https://alexforsale.github.io/posts/why-use-mpd/</link>
      <pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/why-use-mpd/</guid>
      <description>The story of my music playing experience</description>
    </item>
    <item>
      <title>I3wm</title>
      <link>https://alexforsale.github.io/posts/i3wm/</link>
      <pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/i3wm/</guid>
      <description>How I made i3 my goto window manager</description>
    </item>
    <item>
      <title>Projects</title>
      <link>https://alexforsale.github.io/projects/</link>
      <pubDate>Sun, 23 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/projects/</guid>
      <description>&lt;h2 id=&#34;things-that-i-ve-done-currently-doing&#34;&gt;Things That I&amp;rsquo;ve Done / Currently Doing&lt;/h2&gt;
&lt;h3 id=&#34;literate-configurations&#34;&gt;Literate Configurations&lt;/h3&gt;
&lt;p&gt;These repositories are configured in &lt;a href=&#34;https://en.wikipedia.org/wiki/Org-mode&#34;&gt;org-mode&lt;/a&gt;, and the actual configuration codes are stored inside the documentation &lt;a href=&#34;https://en.wikipedia.org/wiki/Noweb&#34;&gt;noweb-style&lt;/a&gt;, and then &amp;ldquo;tangled&amp;rdquo; into the actual file(s).&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://alexforsale.github.io/literate-emacs/&#34;&gt;literate emacs&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Emacs&#34;&gt;Emacs&lt;/a&gt; configuration file.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://alexforsale.github.io/dotfiles-shells/&#34;&gt;dotfiles-shells&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Common shells configuration / startup files. Designed to serve &lt;a href=&#34;https://en.wikipedia.org/wiki/POSIX&#34;&gt;POSIX&lt;/a&gt;-compliant shells that I used (&lt;a href=&#34;https://en.wikipedia.org/wiki/Bash_(Unix_shell)&#34;&gt;bash&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Z_shell&#34;&gt;zsh&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Almquist_shell&#34;&gt;dash/ash/sh&lt;/a&gt;, and &lt;a href=&#34;https://en.wikipedia.org/wiki/Tcsh&#34;&gt;tcsh&lt;/a&gt;) on various machines.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://alexforsale.github.io/dotfiles-bash/&#34;&gt;dotfiles-bash&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Bash startup files, configured mostly for command-line applications that I used.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://alexforsale.github.io/dotfiles-hyprland/&#34;&gt;dotfiles-hyprland&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;https://wiki.hyprland.org/&#34;&gt;A fully autonomous Display Server for linux&lt;/a&gt;, considered to be an Xorg replacement. This repository stores the configuration files. It matured enough to be my daily window manager.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://alexforsale.github.io/dotfiles-apps/&#34;&gt;dotfiles-apps&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Collection of configuration for various applications, usualy it stays in this repository until it warrant a separate repository for the app.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;others&#34;&gt;Others&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://alexforsale.github.io/braindump/&#34;&gt;braindump&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;My attempt at creating a &lt;a href=&#34;https://en.wikipedia.org/wiki/Zettelkasten&#34;&gt;zettelkasten&lt;/a&gt;-like personal knowledge management using org-mode and &lt;a href=&#34;https://ox-hugo.scripter.co/&#34;&gt;hugo&lt;/a&gt;. Still needs tweaking to make it works, and I&amp;rsquo;m considering other options.&lt;/dd&gt;
&lt;/dl&gt;</description>
    </item>
    <item>
      <title>learning Rust Series: Perfect Number</title>
      <link>https://alexforsale.github.io/posts/learning-rust/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/learning-rust/</guid>
      <description>&lt;p&gt;This will be a part of a series on my rust-learning journey. The goal of this post is to document my process of creating a simple program that determine if the number given is a perfect number&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. And also list the perfect number until the given number.&lt;/p&gt;
&lt;h2 id=&#34;imports&#34;&gt;Imports&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;code-snippet--imports&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This is the common input / output modules.&lt;/p&gt;
&lt;h2 id=&#34;function-to-determine-the-perfect-number&#34;&gt;Function to determine the perfect number&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;code-snippet--is-perfect-number&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fn&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;is_perfect_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;i32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-&amp;gt;  &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mut&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;i32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mut&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;i32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This will calculate if the number is a perfect number or not.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Org Mode Workflow</title>
      <link>https://alexforsale.github.io/posts/org-mode-workflow/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/org-mode-workflow/</guid>
      <description>Getting Things Done with /Emacs/</description>
    </item>
    <item>
      <title>Using Terminal Multiplexer</title>
      <link>https://alexforsale.github.io/posts/terminal-multiplexer/</link>
      <pubDate>Wed, 13 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/terminal-multiplexer/</guid>
      <description>or how I achieve terminal efficiency</description>
    </item>
    <item>
      <title>Literate Configuration with Emacs</title>
      <link>https://alexforsale.github.io/posts/literate-configuration/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/literate-configuration/</guid>
      <description>for easier documenting and maintaining codes</description>
    </item>
    <item>
      <title>Hugo blog org-capture-templates</title>
      <link>https://alexforsale.github.io/posts/hugo-blogging-org-capture-templates/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/hugo-blogging-org-capture-templates/</guid>
      <description>My blogging workflow</description>
    </item>
    <item>
      <title>Emacs Version Control</title>
      <link>https://alexforsale.github.io/posts/emacs-version-control/</link>
      <pubDate>Thu, 29 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/emacs-version-control/</guid>
      <description>Managing version controlled projects within Emacs</description>
    </item>
    <item>
      <title>Emacs shell</title>
      <link>https://alexforsale.github.io/posts/emacs-shell/</link>
      <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/emacs-shell/</guid>
      <description>Exploring Emacs Shell capabilities</description>
    </item>
    <item>
      <title>Theming Emacs</title>
      <link>https://alexforsale.github.io/posts/theming-emacs/</link>
      <pubDate>Tue, 27 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/theming-emacs/</guid>
      <description>Changing the look and feel</description>
    </item>
    <item>
      <title>Emacs Evil</title>
      <link>https://alexforsale.github.io/posts/emacs-evil/</link>
      <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/emacs-evil/</guid>
      <description>The extensible vi layer for Emacs.</description>
    </item>
    <item>
      <title>Emacs general.el</title>
      <link>https://alexforsale.github.io/posts/emacs-general/</link>
      <pubDate>Sat, 24 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/emacs-general/</guid>
      <description>More convenient key definitions in emacs</description>
    </item>
    <item>
      <title>Emacs sane defaults</title>
      <link>https://alexforsale.github.io/posts/emacs-sane-defaults/</link>
      <pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/emacs-sane-defaults/</guid>
      <description>Finding comfort in Emacs</description>
    </item>
    <item>
      <title>Emacs vertico</title>
      <link>https://alexforsale.github.io/posts/emacs-vertico/</link>
      <pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/emacs-vertico/</guid>
      <description>VERTical Interactive COmpletion</description>
    </item>
    <item>
      <title>Emacs avy</title>
      <link>https://alexforsale.github.io/posts/emacs-avy/</link>
      <pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/emacs-avy/</guid>
      <description>Jump to things in Emacs tree-style</description>
    </item>
    <item>
      <title>Emacs package management with use-package</title>
      <link>https://alexforsale.github.io/posts/emacs-builtin-use-package/</link>
      <pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/emacs-builtin-use-package/</guid>
      <description>now built-in into emacs since emacs-29</description>
    </item>
    <item>
      <title>Github Action for hugo static site using Emacs</title>
      <link>https://alexforsale.github.io/posts/github-action-hugo-emacs/</link>
      <pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/github-action-hugo-emacs/</guid>
      <description>With a mixture of emacs-lisp and gnu makefile</description>
    </item>
    <item>
      <title>Hyprland</title>
      <link>https://alexforsale.github.io/posts/hyprland/</link>
      <pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/hyprland/</guid>
      <description>Configure Hyprland</description>
    </item>
    <item>
      <title>Using Emacs as an email client</title>
      <link>https://alexforsale.github.io/posts/notmuch-mail-emacs/</link>
      <pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/notmuch-mail-emacs/</guid>
      <description>Exchange mail sync with davmail, msmtp, notmuch and emacs.</description>
    </item>
    <item>
      <title></title>
      <link>https://alexforsale.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/about/</guid>
      <description>&lt;h2 id=&#34;about&#34;&gt;About&lt;/h2&gt;
&lt;h3 id=&#34;kristian-alexander-p&#34;&gt;Kristian Alexander P&lt;/h3&gt;
&lt;h4 id=&#34;profile&#34;&gt;Profile&lt;/h4&gt;
&lt;p&gt;I was an IT Support at Multi Kontrol Nusantara since October 2022 until September 2024. My responsibilities are mainly about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resolving IT support requests from employees.&lt;/li&gt;
&lt;li&gt;Answering employee questions regarding computer systems.&lt;/li&gt;
&lt;li&gt;Gathering and analyzing data to diagnose problems with computer systems.&lt;/li&gt;
&lt;li&gt;Changing configurations, settings and permissions to fix computer issues.&lt;/li&gt;
&lt;li&gt;Installing new software and hardware drivers and updating existing ones as needed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m also running a small networking service, providing internet connection from house to house, the main reason I&amp;rsquo;m doing this is mainly to put my Gnu/Linux knowledge to use for managing all the necessary services which I do so manually.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
