<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Org on alexforsale.github.io</title>
    <link>https://alexforsale.github.io/tags/org/</link>
    <description>Recent content in Org on alexforsale.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jun 2024 13:32:45 +0000</lastBuildDate>
    <atom:link href="https://alexforsale.github.io/tags/org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>learning Rust Series: Perfect Number</title>
      <link>https://alexforsale.github.io/posts/learning-rust/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/learning-rust/</guid>
      <description>This will be a part of a series on my rust-learning journey. The goal of this post is to document my process of creating a simple program that determine if the number given is a perfect number1. And also list the perfect number until the given number.
Imports 1 use std::io; This is the common input / output modules.
Function to determine the perfect number 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 fn is_perfect_number(n: i32) -&amp;gt; bool { let mut sum: i32 = 1; let mut i: i32 = 2; while i * i &amp;lt;= n { if n % i == 0 { sum = sum + i + n / i; } i += 1; } if sum == n &amp;amp;&amp;amp; n !</description>
    </item>
    <item>
      <title>Org Mode Workflow</title>
      <link>https://alexforsale.github.io/posts/org-mode-workflow/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/org-mode-workflow/</guid>
      <description>Getting Things Done with /Emacs/</description>
    </item>
    <item>
      <title>Literate Configuration with Emacs</title>
      <link>https://alexforsale.github.io/posts/literate-configuration/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/literate-configuration/</guid>
      <description>for easier documenting and maintaining codes</description>
    </item>
    <item>
      <title>Hugo blog org-capture-templates</title>
      <link>https://alexforsale.github.io/posts/hugo-blogging-org-capture-templates/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alexforsale.github.io/posts/hugo-blogging-org-capture-templates/</guid>
      <description>My blogging workflow</description>
    </item>
  </channel>
</rss>
